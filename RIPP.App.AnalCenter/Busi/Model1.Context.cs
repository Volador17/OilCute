//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace RIPP.App.AnalCenter.Busi
{
    public partial class NIRCeneterEntities : ObjectContext
    {
        public const string ConnectionString = "name=NIRCeneterEntities";
        public const string ContainerName = "NIRCeneterEntities";
    
        #region Constructors
    
        public NIRCeneterEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public NIRCeneterEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public NIRCeneterEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // 创建代理需要使用 ProxyDataContractResolver 和
            // 可允许延迟加载，这可以在序列化期间展开加载图。
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet 属性
    
        public ObjectSet<AllMethod> AllMethod
        {
            get { return _allMethod  ?? (_allMethod = CreateObjectSet<AllMethod>("AllMethod")); }
        }
        private ObjectSet<AllMethod> _allMethod;
    
        public ObjectSet<CalcData> CalcData
        {
            get { return _calcData  ?? (_calcData = CreateObjectSet<CalcData>("CalcData")); }
        }
        private ObjectSet<CalcData> _calcData;
    
        public ObjectSet<CutResult> CutResult
        {
            get { return _cutResult  ?? (_cutResult = CreateObjectSet<CutResult>("CutResult")); }
        }
        private ObjectSet<CutResult> _cutResult;
    
        public ObjectSet<OilData> OilData
        {
            get { return _oilData  ?? (_oilData = CreateObjectSet<OilData>("OilData")); }
        }
        private ObjectSet<OilData> _oilData;
    
        public ObjectSet<Properties> Properties
        {
            get { return _properties  ?? (_properties = CreateObjectSet<Properties>("Properties")); }
        }
        private ObjectSet<Properties> _properties;
    
        public ObjectSet<S_Moudle> S_Moudle
        {
            get { return _s_Moudle  ?? (_s_Moudle = CreateObjectSet<S_Moudle>("S_Moudle")); }
        }
        private ObjectSet<S_Moudle> _s_Moudle;
    
        public ObjectSet<S_User> S_User
        {
            get { return _s_User  ?? (_s_User = CreateObjectSet<S_User>("S_User")); }
        }
        private ObjectSet<S_User> _s_User;
    
        public ObjectSet<Specs> Specs
        {
            get { return _specs  ?? (_specs = CreateObjectSet<Specs>("Specs")); }
        }
        private ObjectSet<Specs> _specs;
    
        public ObjectSet<YDResult> YDResult
        {
            get { return _yDResult  ?? (_yDResult = CreateObjectSet<YDResult>("YDResult")); }
        }
        private ObjectSet<YDResult> _yDResult;

        #endregion

    }
}
